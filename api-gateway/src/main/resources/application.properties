####应用名称##
spring.application.name=api-gateway
##应用端口
server.port=5555

##eureka注册地址##
#eureka.client.service-url.defaultZone=http://10.209.198.224:49314/eureka/
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
###eureka注册服务实例展现
eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ipAddress}:${server.port}
##eureka实例指向其ip地址
eureka.instance.prefer-ip-address=true


###zuul路由至本地
######zuul默认会通过eureka上的服务实例去进行路由，所以这部分不需要进行配置
###zuul的配置最好采用path与service结合，为而不是path与url结合，因为这样会是的请求的服务失去断路器与线程隔离的保护，也失去负载均衡能力
#zuul.routes.hello-service=/api-a/**
zuul.routes.local.path=/api-a/**
zuul.routes.local.url=forward:/local

#不创建路由规则列表，用，号隔开
#zuul.ignored-services=hello-service

#设置敏感信息
#全局设置 默认设置Cookie、Set-Cookie、Authorization,为了使cookie信息传递，设置为空
zuul.sensitive-headers=
###对指定路由开启自定义敏感头
#zuul.routes.hello-service.customSensitiveHeaders=true
####对指定服务设置敏感头信息为空
#zuul.routes.hello-service.sensitive-headers=

#使WEB应用在路由转发的时候添加Host信息
###通过zuul请求完服务后，通过重定向的方式指向了对应页面，暴露了具体的服务ip与端口，为解决这个问题，设置HOST头信息，指向最初的服务请求地址
zuul.add-host-header=true

#### hystrix and ribbon ###
#####需要让hystrix的超时时间大于Ribbon的超时时间，否则当Hystrix命令超时后，该命令直接熔断，重试机制失去意义
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=5000
#####ribbon创建连接超时时间
#ribbon.ConnectTimeout=1000
######请求处理超时时间
#ribbon.ReadTimeout=3000
zuul.prefix=
###日志
logging.level.root=INFO
logging.level.com.netflix.discovery=INFO
logging.level.org.apache.http=INFO
logging.level.org.springframework.data.redis=INFO